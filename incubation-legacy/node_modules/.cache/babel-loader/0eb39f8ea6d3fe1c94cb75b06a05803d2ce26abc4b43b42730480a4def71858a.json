{"ast":null,"code":"// import { useState } from 'react';\n\n// const AddNewItem = ({ items, setItems }) => {\n//   const [name, setItemName] = useState('');\n//   const [price, setItemPrice] = useState('');\n//   const [quantity, setItemQuantity] = useState('');\n//   const [errors, setErrors] = useState({});\n\n//   const validateFields = () => {\n//     const newErrors = {};\n//     if (!name) newErrors.name = 'Item Name is required';\n//     if (!price || isNaN(parseFloat(price)) || parseFloat(price) <= 0)\n//       newErrors.price = 'Valid Item Price is required';\n//     if (!quantity || isNaN(parseInt(quantity, 10)) || parseInt(quantity, 10) <= 0)\n//       newErrors.quantity = 'Valid Quantity is required';\n\n//     setErrors(newErrors);\n//     return Object.keys(newErrors).length === 0;\n//   };\n\n//   const handleAddNewItem = () => {\n//     if (!validateFields()) return;\n\n//     const newItem = {\n//       name: name,\n//       price: parseFloat(price),\n//       quantity: parseInt(quantity, 10),\n//     };\n\n//     fetch('http://localhost:8765/PRODUCT-SERVICE/product/create', {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify(newItem),\n//       mode: 'no-cors'\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setItems([...items, data]);\n//         console.log('New item added:', data);\n\n//         setItemName('');\n//         setItemPrice('');\n//         setItemQuantity('');\n//         setErrors({});\n//       })\n//       .catch((error) => console.error('Failed to add new item:', error));\n//   };\n\n//   return (\n// <div className=\"add-new-item-card\">\n// <h2>Add Item to Stock</h2>\n// <div className=\"form-field\">\n// <label>Item Name:</label>\n// <input\n//           type=\"text\"\n//           value={name}\n//           onChange={(e) => setItemName(e.target.value)}\n//           style={{ borderColor: errors.name ? 'red' : '' }}\n//         />\n// </div>\n//       {errors.name && <span style={{ color: 'red' }}>{errors.name}</span>}\n// <div className=\"form-field\">\n// <label>Item Price (£):</label>\n// <input\n//           type=\"number\"\n//           step=\"0.01\"\n//           value={price}\n//           onChange={(e) => setItemPrice(e.target.value)}\n//           style={{ borderColor: errors.price ? 'red' : '' }}\n//         />\n// </div>\n//       {errors.price && <span style={{ color: 'red' }}>{errors.price}</span>}\n// <div className=\"form-field\">\n// <label>Quantity to Add:</label>\n// <input\n//           type=\"number\"\n//           value={quantity}\n//           onChange={(e) => setItemQuantity(e.target.value)}\n//           style={{ borderColor: errors.quantity ? 'red' : '' }}\n//         />\n// </div>\n//       {errors.quantity && <span style={{ color: 'red' }}>{errors.quantity}</span>}\n// <button onClick={handleAddNewItem} className=\"add-item-button\">\n//         Add Item\n// </button>\n// </div>\n//   );\n// };\n\n// export default AddNewItem;","map":{"version":3,"names":[],"sources":["C:/Users/User/Desktop/Project 1 Incubation/incubation-legacy/src/ProductComponents/AddNewItem.jsx"],"sourcesContent":["// import { useState } from 'react';\r\n \r\n// const AddNewItem = ({ items, setItems }) => {\r\n//   const [name, setItemName] = useState('');\r\n//   const [price, setItemPrice] = useState('');\r\n//   const [quantity, setItemQuantity] = useState('');\r\n//   const [errors, setErrors] = useState({});\r\n \r\n//   const validateFields = () => {\r\n//     const newErrors = {};\r\n//     if (!name) newErrors.name = 'Item Name is required';\r\n//     if (!price || isNaN(parseFloat(price)) || parseFloat(price) <= 0)\r\n//       newErrors.price = 'Valid Item Price is required';\r\n//     if (!quantity || isNaN(parseInt(quantity, 10)) || parseInt(quantity, 10) <= 0)\r\n//       newErrors.quantity = 'Valid Quantity is required';\r\n \r\n//     setErrors(newErrors);\r\n//     return Object.keys(newErrors).length === 0;\r\n//   };\r\n \r\n//   const handleAddNewItem = () => {\r\n//     if (!validateFields()) return;\r\n \r\n//     const newItem = {\r\n//       name: name,\r\n//       price: parseFloat(price),\r\n//       quantity: parseInt(quantity, 10),\r\n//     };\r\n \r\n//     fetch('http://localhost:8765/PRODUCT-SERVICE/product/create', {\r\n//       method: 'POST',\r\n//       headers: { 'Content-Type': 'application/json' },\r\n//       body: JSON.stringify(newItem),\r\n//       mode: 'no-cors'\r\n//     })\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         setItems([...items, data]);\r\n//         console.log('New item added:', data);\r\n \r\n//         setItemName('');\r\n//         setItemPrice('');\r\n//         setItemQuantity('');\r\n//         setErrors({});\r\n//       })\r\n//       .catch((error) => console.error('Failed to add new item:', error));\r\n//   };\r\n \r\n//   return (\r\n// <div className=\"add-new-item-card\">\r\n// <h2>Add Item to Stock</h2>\r\n// <div className=\"form-field\">\r\n// <label>Item Name:</label>\r\n// <input\r\n//           type=\"text\"\r\n//           value={name}\r\n//           onChange={(e) => setItemName(e.target.value)}\r\n//           style={{ borderColor: errors.name ? 'red' : '' }}\r\n//         />\r\n// </div>\r\n//       {errors.name && <span style={{ color: 'red' }}>{errors.name}</span>}\r\n// <div className=\"form-field\">\r\n// <label>Item Price (£):</label>\r\n// <input\r\n//           type=\"number\"\r\n//           step=\"0.01\"\r\n//           value={price}\r\n//           onChange={(e) => setItemPrice(e.target.value)}\r\n//           style={{ borderColor: errors.price ? 'red' : '' }}\r\n//         />\r\n// </div>\r\n//       {errors.price && <span style={{ color: 'red' }}>{errors.price}</span>}\r\n// <div className=\"form-field\">\r\n// <label>Quantity to Add:</label>\r\n// <input\r\n//           type=\"number\"\r\n//           value={quantity}\r\n//           onChange={(e) => setItemQuantity(e.target.value)}\r\n//           style={{ borderColor: errors.quantity ? 'red' : '' }}\r\n//         />\r\n// </div>\r\n//       {errors.quantity && <span style={{ color: 'red' }}>{errors.quantity}</span>}\r\n// <button onClick={handleAddNewItem} className=\"add-item-button\">\r\n//         Add Item\r\n// </button>\r\n// </div>\r\n//   );\r\n// };\r\n \r\n// export default AddNewItem;"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}